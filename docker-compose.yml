version: "3.2"
services:

  frontend:
    container_name: ziyou-front
    restart: always
    image: node:alpine
    #build:
    #  context: ./frontend/.
    #  dockerfile: frontend.Dockerfile
    stdin_open: true
    tty: true
    working_dir: /app
    environment:
      - CHOKIDAR_USEPOLLING=true # This is a file watching mechanism that is used by create-react-app to watch for file changes.
      - NEXT_WEBPACK_USEPOLLING=1
    volumes:
      - ./frontend/:/app
    command: sh -c "npm install -f && npm run build && npm start"
    ports:
      - 5000:3000

  backend:
    container_name: ziyou-back
    restart: always
    image: node:alpine
    #build:
    #  context: ./frontend/.
    #  dockerfile: frontend.Dockerfile
    stdin_open: true
    tty: true
    working_dir: /api
    volumes:
      - ./backend/:/api
    command: sh -c "npm install -g prisma@latest && npx prisma db push && npm install -f && npm run build && npm start"
    ports:
      - 4000:3000
    expose:
      - "4000"
    networks:
      - rabbitmq_go_net
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - rabbitmq_go_net

  db:
    image: mysql:5.7
    container_name: 'ziyou-db'
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql
    networks:
      - rabbitmq_go_net

networks:
  rabbitmq_go_net:

volumes:
  my-db: